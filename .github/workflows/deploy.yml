name: Test deploy # Workflow 이름
on: # Event 감지
  push:
    branches:
      - develop

env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: ottify-github-action-s3-bucket
  CODE_DEPLOY_APPLICATION_NAME: ottify-codedeploy
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: ottify-codedeploy-group-fe

jobs: # Job 설정
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code. # Repo checkout
        uses: actions/checkout@v3

      - name: Check Node v # Node v 확인
        run: node -v

      - name: Install dependencies # 의존 파일 설치
        run: npm install --force

      - name: Generate build # React Build
        run: npm run build

      - name: Generate Environment Variables File for Production # Github Repository Secrets를 통해 환경 변수 파일을 생성합니다.
        run: |
          echo "REACT_APP_MOVIE_DB_API_KEY=$REACT_APP_MOVIE_DB_API_KEY" >> .env
        env:
          REACT_APP_MOVIE_DB_API_KEY: ${{ secrets.REACT_APP_MOVIE_DB_API_KEY }}

      - name: Configure AWS credentials # AWS 인증 (IAM 사용자 Access Key, Secret Key 활용)
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Upload to AWS S3 # Upload build file to S3
        run: |
          aws deploy push \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --ignore-hidden-files \
            --s3-location s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip \
            --source .

      - name: Deploy to AWS EC2 from S3 # S3 버킷에 있는 파일을 대상으로 CodeDeploy 실행
        run: |
          aws deploy create-deployment \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
            --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip
